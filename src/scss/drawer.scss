#filterContext {
  display: none;
  position: fixed;
  z-index: 60;
  border-radius: $radius;
  box-shadow: 0 0 1em $mid-grey;
  #filterContextDelete {
    color: $has-text-danger;
  }
}
#filterContext.is-active {
  display: block;
}

#drawerContainer {
  width: var(--resizeable-width);
  min-width: var(--min-width);
  max-width: var(--max-width);
  --resizeable-width: 34em;
  height: 100%;
  float: left;
  display: none;
  button {
    background-color: white;
    color: $has-text-link;
  }
  button:focus-visible {
    background-color: $has-text-link;
    color: white;
  }
  code, pre {
    font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;
    background: $mid-grey;
    color: $dark-grey;
    border-radius: $radius;
  }
  /* HANDLE FOR DRAGGING */
  /* https://spin.atomicobject.com/2019/11/21/creating-a-resizable-html-element/ */
  #handle {
    position: absolute;
    right: -1em;
    top: 0;
    height: 100%;
    width: 1em;
    background-color: transparent;
    z-index: 1;
  }
  #handle::after {
    content: "";
    width: 1em;
    position: absolute;
    top: 0;
    bottom: 0;
    background-color: transparent;
    cursor: ew-resize;
    z-index: 2;
  }
  #drawerClose {
    width: 2.5em;
    height: 2.5em;
    display: none;
    line-height: 1.5em;
    text-align: center;
    font-size: 1.25em;
    position: absolute;
    right: -0.75em;
    top: 50% - 2.5%;
    z-index: 30;
    background: $light-grey;
    border-radius: 50%;
    cursor: pointer;
  }
  .drawer {
    width: 100%;
    height: 100%;
    float: left;
    display: none;
    overflow-y: auto;
    overflow-x: hidden;
    padding: 2em;
    background: $light-grey;
    #sortByContainer {
      width: auto;
      float: none;
      list-style: none;
      li {
        width: 100%;
        height: auto;
        line-height: 1.5em;
        margin: 0 0 2px 0;
        padding: 0.5em 1em;
        cursor: grab;
        white-space: nowrap;
        background: white;
        text-align: left;
        border-radius: $radius;
        border: none;
        i {
          color: $has-text-link;
          font-size: 0.9em;
          margin-right: 1em;
        }
      }
      li.drag-sort-active {
        border-left: 0.2em solid $has-text-link;
      }
    }
    .priority {
      a {
        font-size: 1.4em;
      }
    }
    a {
      position: relative;
      margin: 0 .5rem .5rem 0;
      padding: 0.15em 0.5em;
      span.tag {
        height: 1.6em;
        font-family: FreeSansBold;
        position: absolute;
        right: -.75em;
        top: -.75em;
        z-index: 35;
        padding: 0 0.5em;
      }
    }
    a.is-greyed-out {
      .tag {
        display: none;
      }
    }
    section {
      width: 100%;
      padding: 0;
      margin: 0 0 1.5em 0;
      h4.is-4 {
        font-size: 1.25em;
        font-family: FreeSansBold;
        margin: 0 0 0.75em 0;
      }
      h4.is-4.clickable {
        cursor: pointer;
        display: inline;
        i {
          color: $has-text-link;
        }
      }
      h4.is-4.clickable::after {
        height: 1em;
        display: block;
        content: '\A';
        white-space: pre;
      }
      .todoFilterHint {
        cursor: help;
      }
    }
    table tr td:nth-child(odd) {
      width: auto;
      vertical-align: middle;
    }
    table tr td:nth-child(even) {
      width: auto;
      text-align: center;
      padding-right: 0 ;
    }
  }
  .drawer::-webkit-scrollbar {
    background-color: transparent;
    width: .8em
  }
  .drawer::-webkit-scrollbar-thumb:window-inactive,
  .drawer::-webkit-scrollbar-thumb {
    background: $mid-grey;
    border-radius: $radius;
  }
  #viewDrawer {
    button {
      margin: 0;
    }
    table {
      tr {
        th h3 {
          margin-top: 1em;
        }
      }
    }
  }
}
#drawerContainer.is-active,
#drawerContainer .is-active {
  display: block;
}
#drawerContainer:hover {
  #drawerClose {
    display: inline-block;
  }
}
#zoomStatus {
  padding: 0 .55em;
}
#zoomUndo {
  cursor: pointer;
}
